<!DOCTYPE html>
<html lang="ja">
	<head>
		<%- include('../../parts/head', {title: '字幕コネクター'}) %>
		<meta property="og:site_name" content="字幕コネクター"/>
		<meta property="og:url" content="<%= rootURL %>"/>
		<meta property="og:title" content="字幕コネクター"/>
		<meta property="og:type" content="Website" />
		<meta property="og:description" content=""/>

		<script type="text/javascript" src="/javascripts/functions.js"></script>
		<script type="text/javascript" src="/javascripts/recorder.js"></script>
		<script type="text/javascript" src="/javascripts/visualizer.js"></script>
		
		<style>
			html,
			body
			{
				height: 100%;
				background-color:ghostwhite;
			}
		</style>
	</head>
	<body>
		<div class="container p-2">
			<div class="mb-3">
				<a href="/">トップに戻る</a>
			</div>

			<h1>字幕コネクター</h1>

			<div class="mb-3">
				音声認識結果をZoomの字幕として送信します。
			</div>

			<div class="row mb-3">
				<div class="col-sm">
					<select class="form-select" id="devices" name="devices" aria-label="入力デバイス">
					</select>
				</div>
			</div>
			<div class="row mb-3">
				<div class="col-auto">
					<button class="btn btn-outline-primary" type="button" id="startRecordingButton">開始</button>
				</div>
				<div class="col-auto">
					<button class="btn btn-outline-primary" type="button" id="stopRecordingButton">終了</button>
				</div>
			</div>
			<div class="row mb-3">
				<div class="col">
					<canvas id="frequency" width="640" height="100"></canvas>
				</div>
			</div>

			<div class="row mb-3">
				<div class="col-auto">
					<div id="mediaRecorderError"></div>
				</div>
			</div>

			<div class="accordion" id="accordionSettings">
				<div class="accordion-item">
					<h2 class="accordion-header" id="settings-menu2-header">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#settings-menu2" aria-expanded="false" aria-controls="settings-menu2">
							<%- __("音声認識設定（クリックして表示／非表示）") %>
						</button>
					</h2>
					<div id="settings-menu2" class="accordion-collapse collapse" aria-labelledby="settings-menu2">
						<div class="accordion-body">
							<div class="row small mb-3">
								<div class="col">
									<div class="mb-3"><%- __("音声認識API<a href='%s' target='_blank' rel='noopener'>AmiVoice Cloud Platform</a>を使用して音声認識の結果を取得します。", "https://acp.amivoice.com/main/") %></div>
									<div class="mb-3">
										<div><%- __("音声認識APIのご利用は有料となります（※毎月60分無料枠があるのでお試しいただけます）") %></div>
									</div>
									<div class="mb-3"><%- __("①AmiVoice Cloud Platformのページを開き「無料で利用開始」をクリックしログインしてください。既にご利用の方はマイページを開きます。") %></div>
									<div class="mb-3"><%- __("②左のメニューの「接続情報」をクリックし「APPKEY」に表示されている文字列をコピーします。このAPPKEYはとても重要な情報なので取り扱いにはご注意ください。") %></div>
									<div class="mb-3"><%- __("③「字幕コネクター」に戻り「音声認識設定」の「APPKEY」にペーストします。APPKEYをブラウザに保存しておきたいときは「APPKEYをブラウザに保存する」にチェックを入れてください。") %></div>
									<div class="mb-3"><%- __("④AmiVoice Cloud Platformのご利用内容に応じて「接続エンジン名」の設定を変更できます。初期値は「会話_汎用」が設定されています。") %></div>
									<div class="mb-3"><%- __("⑤音声認識サーバーで「ログ保存あり」または「ログ保存なし」を選択します。内容の機密性に応じて選択してご利用ください。") %></div>
								</div>
							</div>
							<div class="row mb-3">
								<div class="col">
									<div><%- __("APPKEY") %></div>
									<input id="acpAppKey" name="acpAppKey" type="password" class="form-control" value="" placeholder="" autocomplete="new-password" aria-label="">
									<div class="form-check">
										<input class="form-check-input" type="checkbox" value="" id="saveAppKey" name="saveAppKey" value="" checked>
										<label class="form-check-label" for="saveAppKey"><%- __("APPKEYをブラウザに保存する") %></label>
									</div>
								</div>
							</div>
							<div class="row mb-3">
								<div class="col">
									<div><%- __("サービスID") %></div>											
									<input id="acpProfileId" name="acpProfileId" type="text" class="form-control" value="" placeholder="" aria-label="">
									<div class="small ms-3"><%- __("サービスIDを指定するとAmiVoice Cloud Platform上での単語登録が有効になります。") %></div>
								</div>
							</div>		
							<div class="row mb-3">
								<div class="col">
									<div><%- __("接続エンジン名") %></div>
									<select class="form-select" id="acpGrammarFileNameSelect">
										<option value="-a-general" selected><%- __("会話_汎用") %></option>
										<option value="-a-general-en"><%- __("英語_汎用") %></option>
										<option value="-a-general-zh"><%- __("中国語_汎用") %></option>
										<option value="-a-medgeneral"><%- __("会話_医療") %></option>
										<option value="-a-bizmrreport"><%- __("会話_製薬") %></option>
										<option value="-a-bizfinance"><%- __("会話_金融") %></option>
										<option value="-a-bizinsurance"><%- __("会話_保険") %></option>
									</select>
									<div class="small ms-3"><%- __("音声認識エンジンはAmiVoice Cloud Platformのマイページ内の「プラン申込」で行うことができます。価格もそちらでご確認ください。") %></div>
								</div>
							</div>		
							<div class="row mb-3">
								<div class="col-sm">
									<div><%- __("音声認識API") %></div>
									<select class="form-select" id="acpLoggingOptOut" name="acpLoggingOptOut" aria-label="<%- __("音声認識API") %>">
										<option value="0" selected><%- __("ログ保存あり") %></option>
										<option value="1"><%- __("ログ保存なし") %></option>
									</select>
									<div class="small ms-3"><%- __("ログ保存ありとなしで価格が異なります。詳しくはAmiVoice Cloud Platformのマイページ内でご確認ください。") %></div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<script>
			let mediaRecorder = null ;
			let chunks = [] ;
			let deviceId = "" ;
			let recorder = new Recorder() ;
			let visualizer ;

			$(async function() {
				restoreSettings() ;

				function eventListener(e) {
					storeSettings()

					let grammarFileNamesLabel = $("#acpGrammarFileNameSelect option:selected").text() ;
					$("#acpGrammarFileNamesLabel").text(grammarFileNamesLabel) ;
				} ;

				$("#saveAppKey").on('change', eventListener) ;
				$("#acpGrammarFileNameSelect").on('change', eventListener) ;
				$("#acpProfileId").on('input', eventListener) ;
				$("#acpAppKey").on('input', eventListener) ;
				$("#acpLoggingOptOut").on('change', eventListener) ;
				
				let devices = await Recorder.currentDevices() ;

				devices.forEach(function(device) {
					if (device.kind == "audioinput") {
						$("#devices").append('<option value="' + device.deviceId + '">' + device.label + '</option>') ;
					}
				}) ;

				deviceId = $('[name=devices]').val();

				recorder.onAudioProcess = (e) => {
					//console.log(e) ;
				} ;

				let canvas = $("#frequency")[0] ;

				visualizer = new Visualizer(canvas) ;

				$('[name=devices]').on("change", async () => {
					deviceId = $('[name=devices]').val();
					//let label = $('[name=devices] option:selected').text();
					if (recorder.isRunning()) {
						recorder.pause() ;
						recorder.resume(deviceId) ;

						visualizer.start(recorder.analyser) ;
					}
				}) ;

				$('#startRecordingButton').on('click', (e) => {
					if (!recorder.isRunning()) {
						recorder.resume(deviceId) ;

						visualizer.start(recorder.analyser) ;
					}
				}) ;

				$('#stopRecordingButton').on('click', (e) => {
					if (recorder.isRunning()) {
						recorder.pause() ;
						visualizer.stop() ;
					}
				}) ;
			}) ;
			
			function saveBlob(blob, fileName) { 
				if(window.navigator.msSaveBlob) {
					window.navigator.msSaveBlob(blob, fileName);
				} else {
					var a = document.createElement("a");
					a.href = URL.createObjectURL(blob);
					a.target = '_blank';
					a.download = fileName;
					a.click();
				}
			}

			function restoreSettings() {
				
				let saveAppKey = localStorageGetItem("saveAppKey") ;

				if (saveAppKey != undefined) {
					$('#saveAppKey').prop("checked", saveAppKey == "true") ;
				}

				let acpGrammarFileNames = localStorageGetItem("acpGrammarFileNames") ;

				if (acpGrammarFileNames != undefined) {
					$('#acpGrammarFileNameSelect').val(acpGrammarFileNames) ;
				}

				let acpProfileId = localStorageGetItem("acpProfileId") ;

				if (acpProfileId != undefined) {
					$('#acpProfileId').val(acpProfileId) ;
				}

				let acpAppKey = localStorageGetItem("acpAppKey") ;

				if (acpAppKey != undefined) {
					$('#acpAppKey').val(acpAppKey) ;
				}

				let acpLoggingOptOut = localStorageGetItem("acpLoggingOptOut") ;

				if (acpLoggingOptOut != undefined) {
					$('[name=acpLoggingOptOut]').val(acpLoggingOptOut) ;
				}
			}

			function storeSettings() {
				localStorageSetItem("saveAppKey", $('#saveAppKey').prop("checked")) ;
				localStorageSetItem("acpLoggingOptOut", $('[name=acpLoggingOptOut]').val()) ;
				localStorageSetItem("acpGrammarFileNames", $('#acpGrammarFileNameSelect').val()) ;
				localStorageSetItem("acpProfileId", $('#acpProfileId').val()) ;
				localStorageSetItem("seekingSeconds", $('#seekingSeconds').val()) ;
				localStorageSetItem("playbackSeconds", $('#playbackSeconds').val()) ;

				if ($('#saveAppKey').prop("checked")) {
					localStorageSetItem("acpAppKey", $('#acpAppKey').val()) ;
				} else {
					localStorage.removeItem("acpAppKey") ;
				}

				localStorageSetItem("acpDiarization", $('#acpDiarization').prop("checked")) ;
			}

			let prefix = "jc_" ;

			function localStorageGetItem(key) {
				return localStorage.getItem(prefix + key) ;
			}
			
			function localStorageSetItem(key, val) {
				if (val != undefined) {
					localStorage.setItem(prefix + key, val) ;
				}
			}
		</script>

	</body>
</html>
