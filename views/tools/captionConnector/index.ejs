<!DOCTYPE html>
<html lang="ja">
	<head>
		<%- include('../../parts/head', {title: '字幕コネクター'}) %>
		<meta property="og:site_name" content="字幕コネクター"/>
		<meta property="og:url" content="<%= rootURL %>"/>
		<meta property="og:title" content="字幕コネクター"/>
		<meta property="og:type" content="Website" />
		<meta property="og:description" content=""/>

		<script type="text/javascript" src="/javascripts/functions.js"></script>
		<script type="text/javascript" src="/javascripts/recorder.js"></script>
		<script type="text/javascript" src="/javascripts/visualizer.js"></script>
		
		<style>
			html,
			body
			{
				height: 100%;
				background-color:ghostwhite;
			}
		</style>
	</head>
	<body>
		<div class="container p-2">
			<div class="mb-3">
				<a href="/">トップに戻る</a>
			</div>

			<h1>字幕コネクター</h1>

			<div class="mb-3">
				音声認識結果をZoomの字幕として送信します。
			</div>

			<div class="row mb-3">
				<div class="col-sm">
					<select class="form-select" id="devices" name="devices" aria-label="入力デバイス">
					</select>
				</div>
			</div>
			<div class="row mb-3">
				<div class="col-auto">
					<button class="btn btn-outline-primary" type="button" id="startRecordingButton">開始</button>
				</div>
				<div class="col-auto">
					<button class="btn btn-outline-primary" type="button" id="stopRecordingButton">終了</button>
				</div>
			</div>
			<div class="row mb-3">
				<div class="col">
					<canvas id="frequency" width="640" height="100"></canvas>
				</div>
			</div>

			<div class="row mb-3">
				<div class="col-auto">
					<div id="mediaRecorderError"></div>
				</div>
			</div>

			<%- include('../../parts/speechRecognitionSettings.ejs', {}) %>
		</div>

		<script>
			let mediaRecorder = null ;
			let chunks = [] ;
			let deviceId = "" ;
			let recorder = new Recorder() ;
			let visualizer ;

			$(async function() {
				let devices = await Recorder.currentDevices() ;

				devices.forEach(function(device) {
					if (device.kind == "audioinput") {
						$("#devices").append('<option value="' + device.deviceId + '">' + device.label + '</option>') ;
					}
				}) ;

				deviceId = $('[name=devices]').val();

				recorder.onAudioProcess = (e) => {
					//console.log(e) ;
				} ;

				let canvas = $("#frequency")[0] ;

				visualizer = new Visualizer(canvas) ;

				$('[name=devices]').on("change", async () => {
					deviceId = $('[name=devices]').val();
					//let label = $('[name=devices] option:selected').text();
					if (recorder.isRunning()) {
						recorder.pause() ;
						recorder.resume(deviceId) ;

						visualizer.start(recorder.analyser) ;
					}
				}) ;

				$('#startRecordingButton').on('click', (e) => {
					if (!recorder.isRunning()) {
						recorder.resume(deviceId) ;

						visualizer.start(recorder.analyser) ;
					}
				}) ;

				$('#stopRecordingButton').on('click', (e) => {
					if (recorder.isRunning()) {
						recorder.pause() ;
						visualizer.stop() ;
					}
				}) ;
			}) ;
			
			function saveBlob(blob, fileName) { 
				if(window.navigator.msSaveBlob) {
					window.navigator.msSaveBlob(blob, fileName);
				} else {
					var a = document.createElement("a");
					a.href = URL.createObjectURL(blob);
					a.target = '_blank';
					a.download = fileName;
					a.click();
				}
			}
		</script>

	</body>
</html>
